library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity testbench is
end testbench;

architecture Behavioral of testbench is
    component DivisorFrecuencia is
        Port ( clk : in STD_LOGIC;
               reset : in STD_LOGIC;
               clk_out : inout STD_LOGIC);
    end component;

    signal clk : STD_LOGIC := '0';
    signal reset : STD_LOGIC := '0';
    signal clk_out : STD_LOGIC := '0';

begin
    uut: DivisorFrecuencia port map (clk => clk, reset => reset, clk_out => clk_out);

    process
    begin
    
        reset <= '1';
        wait for 10 ps;
        reset <= '0';
        wait for 100 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait for 1 ps;
        clk <= '0';
        wait for 1 ps;
        clk <= '1';
        wait;
    end process;

end Behavioral;
